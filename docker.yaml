---
- name: Update server
  hosts: homeservers
  become: yes
  gather_facts: yes
  vars:
    DOCKER_PACKAGES:
    - ca-certificates
    - curl
    - gnupg
    - lsb-release
    USER: "hans"
    DOCKER_COMPOSE_VERSION: "v2.2.2"

  tasks:
  - name: Upgrade packages
    apt:
      update_cache: yes
      force_apt_get: yes

  - name: Install packages needed for docker
    apt:
      name: '{{ DOCKER_PACKAGES }}'
      state: present
      force_apt_get: yes
  - name: Add Docker GPG apt Key
    apt_key:
      url: https://download.docker.com/linux/debian/gpg
      state: present

  - name: Save the release version
    shell: lsb_release -cs
    register: raspberrypi_os_version

  - name: Save the release arch
    shell: dpkg --print-architecture
    register: raspberrypi_os_arch

  - name: Add Docker Repository
    apt_repository:
      repo: "deb [arch={{ raspberrypi_os_arch.stdout }}] https://download.docker.com/linux/debian {{ raspberrypi_os_version.stdout }} stable"
      state: present

  - name: Update apt packages
    apt:
      update_cache: yes
      force_apt_get: yes

  - name: Install Docker
    apt:
      name: "docker-ce"
      state: present
      force_apt_get: yes

  - name: Test Docker with hello-world
    shell: "docker run hello-world"
    register: hello_world_output

  - name: Show output of hello-world
    debug:
      msg: "Container Output: {{hello_world_output.stdout}}"

  - name: Create docker group
    group: 
      name: "docker"
      state: present

  - name: Adding user {{ USER }} to docker group
    user:
      name: "{{ USER }}"
      groups: "docker"
      append: "yes"


  - name: Save the system name
    shell: uname -s
    register: kernel_name 

  - name: Save the machine name
    shell: uname -m
    register: hardware_name

  - name: Install Docker Compose
    get_url:
      url: https://github.com/docker/compose/releases/download/{{ DOCKER_COMPOSE_VERSION }}/docker-compose-linux-{{ hardware_name.stdout }}
      dest: "/usr/local/bin/docker-compose"
      mode: 755
      timeout: 300
    when: hardware_name.stdout == "x86_64"

  - name: Install Docker Compose
    get_url:
      url: https://github.com/docker/compose/releases/download/{{ DOCKER_COMPOSE_VERSION }}/docker-compose-linux-armv6
      dest: "/usr/local/bin/docker-compose"
      mode: 755
      timeout: 300
    when: hardware_name.stdout == "armv7l"

